"""first mig

Revision ID: bbafb7e9393e
Revises: 
Create Date: 2024-09-09 20:13:12.082605

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = 'bbafb7e9393e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('fullname', sa.String(), nullable=False),
    sa.Column('username', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('profile_picture_url', sa.String(), nullable=True),
    sa.Column('bio_txt', sa.String(), nullable=True),
    sa.Column('role', sa.Enum('USER', 'SUPER_USER', name='powerrole'), nullable=False),
    sa.Column('is_verified', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('email', name=op.f('users_email_key')),
    sa.UniqueConstraint('password_hash', name=op.f('users_password_hash_key')),
    sa.UniqueConstraint('username', name=op.f('users_username_key'))
    )
    op.create_table('blogs',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('author_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), nullable=False),
    sa.Column('slug', sa.String(), nullable=True),
    sa.Column('content', sa.JSON(), nullable=False),
    sa.Column('summary', sa.String(), nullable=False),
    sa.Column('status', sa.Enum('DRAFT', 'PUBLISHED', 'PRIVATE', name='statusenum'), nullable=False),
    sa.Column('published_at', sa.DateTime(), nullable=True),
    sa.Column('created_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.Column('updated_at', sa.DateTime(), server_default=sa.text("TIMEZONE('utc', CURRENT_TIMESTAMP)"), nullable=False),
    sa.ForeignKeyConstraint(['author_id'], ['users.id'], name=op.f('blogs_author_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('blogs_pkey'))
    )
    op.create_table('refresh_tokens',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('token', sa.String(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('refresh_tokens_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('refresh_tokens_pkey')),
    sa.UniqueConstraint('token', name=op.f('refresh_tokens_token_key'))
    )
    op.create_table('blog_images',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('blog_id', sa.UUID(), nullable=False),
    sa.Column('image_url', sa.String(), nullable=False),
    sa.ForeignKeyConstraint(['blog_id'], ['blogs.id'], name=op.f('blog_images_blog_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('blog_images_pkey'))
    )
    op.create_table('blog_likes',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('blog_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('liked_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['blog_id'], ['blogs.id'], name=op.f('blog_likes_blog_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('blog_likes_user_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('blog_likes_pkey'))
    )
    op.create_table('blog_views',
    sa.Column('id', sa.UUID(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
    sa.Column('blog_id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=True),
    sa.Column('viewed_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['blog_id'], ['blogs.id'], name=op.f('blog_views_blog_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('blog_views_user_id_fkey'), ondelete='SET NULL'),
    sa.PrimaryKeyConstraint('id', name=op.f('blog_views_pkey'))
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('blog_views')
    op.drop_table('blog_likes')
    op.drop_table('blog_images')
    op.drop_table('refresh_tokens')
    op.drop_table('blogs')
    op.drop_table('users')
    # ### end Alembic commands ###
